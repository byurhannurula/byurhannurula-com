@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 0 0% 10%;
    --card: 0 0% 100%;
    --card-foreground: 0 0% 10%;
    --popover: 0 0% 100%;
    --popover-foreground: 0 0% 10%;
    --primary: 15 100% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 0 0% 96%;
    --secondary-foreground: 0 0% 10%;
    --muted: 0 0% 96%;
    --muted-foreground: 0 0% 45%;
    --accent: 0 0% 96%;
    --accent-foreground: 0 0% 10%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;
    --border: 0 0% 90%;
    --input: 0 0% 90%;
    --ring: 15 100% 50%;
    --radius: 0.5rem;
  }

  .dark {
    --background: 220 13% 9%;
    --foreground: 0 0% 98%;
    --card: 220 13% 9%;
    --card-foreground: 0 0% 98%;
    --popover: 220 13% 9%;
    --popover-foreground: 0 0% 98%;
    --primary: 15 100% 50%;
    --primary-foreground: 0 0% 100%;
    --secondary: 220 13% 14%;
    --secondary-foreground: 0 0% 98%;
    --muted: 220 13% 14%;
    --muted-foreground: 0 0% 65%;
    --accent: 220 13% 14%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;
    --border: 220 13% 20%;
    --input: 220 13% 20%;
    --ring: 15 100% 50%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

.font-sans {
  font-family: var(--font-sans);
}

/* Animation matching animations.ts config */

/* fadeIn - duration: 0.3s */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* fadeInUp - duration: 0.3s, y: 20px */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* fadeInItem - duration: 0.2s, y: 10px (for fast items) */
@keyframes fadeInItem {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* fadeInScale - duration: 0.5s */
@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.95);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Main container - duration: 0.3s */
.animate-fade-in {
  animation: fadeIn 0.3s ease-out forwards;
}

/* Stagger container - duration: 0.3s, delay: 0.1s */
.animate-fade-in-delayed {
  animation: fadeIn 0.3s ease-out 0.1s forwards;
}

/* Item with slide up - duration: 0.3s */
.animate-fade-in-up {
  animation: fadeInUp 0.3s ease-out forwards;
}

/* Fast item - duration: 0.2s (for lists) */
.animate-fade-in-item {
  animation: fadeInItem 0.2s ease-out forwards;
}

/* Scale animation - duration: 0.5s */
.animate-fade-in-scale {
  animation: fadeInScale 0.5s ease-out forwards;
}

/* Stagger children - delay: 0.05s between items */
.stagger-children > * {
  opacity: 0;
  animation: fadeInUp 0.3s ease-out forwards;
}

.stagger-children > *:nth-child(1) {
  animation-delay: 0.05s;
}
.stagger-children > *:nth-child(2) {
  animation-delay: 0.1s;
}
.stagger-children > *:nth-child(3) {
  animation-delay: 0.15s;
}
.stagger-children > *:nth-child(4) {
  animation-delay: 0.2s;
}
.stagger-children > *:nth-child(5) {
  animation-delay: 0.25s;
}
.stagger-children > *:nth-child(6) {
  animation-delay: 0.3s;
}
.stagger-children > *:nth-child(7) {
  animation-delay: 0.35s;
}
.stagger-children > *:nth-child(8) {
  animation-delay: 0.4s;
}
.stagger-children > *:nth-child(9) {
  animation-delay: 0.45s;
}
.stagger-children > *:nth-child(10) {
  animation-delay: 0.5s;
}

/* Smooth transitions */
* {
  @apply transition-colors duration-200;
}

/* Code block styling for rehype-pretty-code */
pre {
  @apply overflow-x-auto p-4;
}

pre > code {
  @apply grid text-sm;
}

code[data-line-numbers] {
  counter-reset: line;
}

code[data-line-numbers] > [data-line]::before {
  counter-increment: line;
  content: counter(line);
  @apply mr-4 inline-block w-4 text-right text-muted-foreground/50;
}

code > [data-line] {
  @apply border-l-2 border-l-transparent px-2;
}

code[data-line-numbers-max-digits="2"] > [data-line]::before {
  width: 2rem;
}

code[data-line-numbers-max-digits="3"] > [data-line]::before {
  width: 3rem;
}
